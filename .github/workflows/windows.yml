#-----------------------------------------------------------------------------------------------------------------------
# .github/workflows/windows.yml is part of Brewken, and is copyright the following authors 2021-2022:
#   • Artem Martynov <martynov-a@polyplastic.by>
#   • Chris Speck <cgspeck@gmail.com>
#   • Mattias Måhl <mattias@kejsarsten.com>
#
# Brewken is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# Brewken is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
# warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with this program.  If not, see
# <http://www.gnu.org/licenses/>.
#-----------------------------------------------------------------------------------------------------------------------
name: Windows

on:
  push:
    branches:
      - develop
      - "stable/**"

  pull_request:
    branches:
      - develop
  schedule:
    - cron: "0 2 * * *"

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-win:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include: [
          # Current installer NSIS with required plugins don't support x64 package
          #{ msystem: MINGW64, arch: x86_64 },
          { msystem: MINGW32, arch: i686 }
        ]
    steps:

      - uses: actions/checkout@v3
        with:
          path: temp
          fetch-depth: 0
          submodules: recursive

      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          install: >-
            mingw-w64-${{ matrix.arch }}-boost
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-doxygen
            mingw-w64-${{ matrix.arch }}-gcc
            mingw-w64-${{ matrix.arch }}-libbacktrace
            mingw-w64-${{ matrix.arch }}-make
            mingw-w64-${{ matrix.arch }}-meson
            mingw-w64-${{ matrix.arch }}-ninja
            mingw-w64-${{ matrix.arch }}-nsis
            mingw-w64-${{ matrix.arch }}-python
            mingw-w64-${{ matrix.arch }}-qt5
            mingw-w64-${{ matrix.arch }}-xalan-c
            mingw-w64-${{ matrix.arch }}-xerces-c
          update: true
          release: true
          path-type: strict

      - name: Download nsis plugins
        run: |
          New-Item -ItemType Directory -Force -Path .\temp\build
          Invoke-WebRequest -Uri https://nsis.sourceforge.io/mediawiki/images/a/af/Locate.zip -OutFile .\temp\build\Locate.zip
          Expand-Archive -Path .\temp\build\Locate.zip -DestinationPath .\temp\build\Locate
          Invoke-WebRequest -Uri https://nsis.sourceforge.io/mediawiki/images/7/76/Nsislog.zip -OutFile .\temp\build\Nsislog.zip
          Expand-Archive -Path .\temp\build\Nsislog.zip -DestinationPath .\temp\build\Nsislog

      - name: Move Checkout
        run: |
          Copy-Item -Path ".\temp" -Destination "C:\_" -Recurse

      - name: CMake config
        shell: msys2 {0}
        run: |
          cd /C/_/build
          cp ./Locate/Include/Locate.nsh /mingw32/share/nsis/Include/
          cp ./Locate/Plugin/locate.dll /mingw32/share/nsis/Plugins/ansi/
          cp ./Nsislog/plugin/nsislog.dll /mingw32/share/nsis/Plugins/ansi
          cmake .. -DCMAKE_RC_COMPILER:FILEPATH=windres.exe -G "MinGW Makefiles"

        # The pwd and find ../third-party commands below are just diagnostics, but it's generally useful to have too
        # much rather than not enough diagnostic info on these GitHub action builds
      - name: Build
        shell: msys2 {0}
        run: |
          cd /C/_/build
          pwd
          find ../third-party
          cmake --build .

      - name: Test
        shell: msys2 {0}
        run: |
          cd /C/_/build
          cmake --build . --target test

      - name: Package
        shell: msys2 {0}
        run: |
          cd /C/_/build
          cmake --build . --target package --verbose

      - name: Upload Windows binaries (installers)
        if: ${{ success()}}
        uses: actions/upload-artifact@v3
        with:
          name: brewken-dev-${{ matrix.msystem }}
          path: |
            C:/_/build/brewken*.exe
            C:/_/build/brewken*.exe.sha256
          retention-days: 7

      - name: Upload error info from failed build
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.msystem }}-build
          path: C:/_/build/
          retention-days: 1
